#!/usr/bin/make -f
# Wenn man direkt
# %:
#	  dh $@
# benutzt, wird make in einer fakeroot-Umgebung ausgefÃ¼hrt. Buildroot baut das Image aber auch mit
# fakeroot, nur kann man kein fakeroot in einer fakeroot-Umgebung laufen lassen. Also alles einzeln...
#
# Wir haben einen Rechner, der per PXE werder GRUB-2.02~beta3 noch ein musl-kompiliertes GRUB-2.02~beta2
# noch den GRUB aus dem Ubuntu-Paket bootet, weshalb hier nochmal ein funktionierender GRUB gebaut wird.

BUILDROOT=$(CURDIR)/buildroot
BUILDDIR=$(CURDIR)/build
BUILD32=$(BUILDDIR)/build-i386
BUILD64=$(BUILDDIR)/build-x86_64
LINBO_VERSION=$(shell head -n 1 debian/changelog | sed 's/.*\([0-9]\{1,2\}\.[0-9]\{1,2\}\.[0-9]\{1,2\}\-[0-9]\{1,2\}\).*/\1/')

GRUBNAME=grub-2.02~beta2
GRUBCFG=--disable-nls --disable-efiemu --disable-mm-debug --disable-cache-stats \
 --disable-boot-time --disable-grub-mkfont --disable-grub-themes \
 --disable-grub-mount --disable-device-mapper --disable-liblzma --disable-libzfs
GRUB_COMMON_MODULES=all_video chain configfile cpuid echo net ext2 extcmd \
 fat gettext gfxmenu gfxterm http ntfs linux loadenv minicmd net part_gpt \
 part_msdos png progress reiserfs search terminal test
GRUB_PC_MODULES=biosdisk ntldr pxe
GRUB_EFI_MODULES=efi_gop efi_uga efinet tftp
GRUB_MKNETDIR=$(BUILDDIR)/grub-pc-i386/grub-mknetdir --net-directory=$(BUILDDIR) --subdir=/boot/grub

clean:
	dh clean

override_dh_clean:
	dh_clean build/

.PHONY: build
build:
	echo "LINBO $(LINBO_VERSION)"
	echo "LINBO $(LINBO_VERSION)" > $(BUILDROOT)-external/board/rootfs_overlay/etc/linbo-version
	cd $(BUILDROOT); make O=$(BUILD32) BR2_EXTERNAL=$(BUILDROOT)-external linbo-i386_defconfig
	cd $(BUILDROOT); make O=$(BUILD64) BR2_EXTERNAL=$(BUILDROOT)-external linbo-x86_64_defconfig
	cd $(BUILDROOT); make O=$(BUILD32)
	cd $(BUILDROOT); make O=$(BUILD64)
ifeq ("$(wildcard $(BUILDDIR)/$(GRUBNAME))","")
	wget -O $(BUILDDIR)/$(GRUBNAME).tar.xz http://alpha.gnu.org/gnu/grub/$(GRUBNAME).tar.xz
endif
ifeq ("$(wildcard $(BUILDDIR)/boot)","")
	cd $(BUILDDIR); tar xf $(GRUBNAME).tar.xz; cp -a $(GRUBNAME) grub-pc-i386; cp -a $(GRUBNAME) grub-efi-i386; cp -a $(GRUBNAME) grub-efi-x86_64
	cd $(BUILDDIR)/grub-pc-i386; ./configure $(GRUBCFG) --with-platform=pc --target=i386; make
	cd $(BUILDDIR)/grub-efi-i386; ./configure $(GRUBCFG) --with-platform=efi --target=i386; make
	cd $(BUILDDIR)/grub-efi-x86_64; ./configure $(GRUBCFG) --with-platform=efi --target=x86_64; make
	$(GRUB_MKNETDIR) --modules="$(GRUB_COMMON_MODULES) $(GRUB_PC_MODULES)" -d $(BUILDDIR)/grub-pc-i386/grub-core
	$(GRUB_MKNETDIR) --modules="$(GRUB_COMMON_MODULES) $(GRUB_EFI_MODULES)" -d $(BUILDDIR)/grub-efi-i386/grub-core
	$(GRUB_MKNETDIR) --modules="$(GRUB_COMMON_MODULES) $(GRUB_EFI_MODULES)" -d $(BUILDDIR)/grub-efi-x86_64/grub-core
endif
ifeq ("$(wildcard $(BUILDDIR)/ipxe.efi)","")
	wget -O $(BUILDDIR)/ipxe.efi https://ipxe.org/ipxe.efi
endif
ifeq ("$(wildcard $(BUILDDIR)/ipxe.lkrn)","")
	wget -O $(BUILDDIR)/ipxe.lkrn https://ipxe.org/ipxe.lkrn
endif

binary:
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	dh_auto_install
	dh_install
	dh_installdocs
	dh_installchangelogs
	dh_installexamples
	dh_installman
	dh_installcatalogs
	dh_installcron
	dh_installdebconf
	dh_installemacsen
	dh_installifupdown
	dh_installinfo
	dh_installinit
	dh_installmenu
	dh_installmime
	dh_installmodules
	dh_installlogcheck
	dh_installlogrotate
	dh_installpam
	dh_installppp
	dh_installudev
	dh_installgsettings
	dh_bugfiles
	dh_ucf
	dh_lintian
	dh_gconf
	dh_icons
	dh_perl
	dh_usrlocal
	dh_link
	dh_installwm
	dh_installxfonts
	dh_strip_nondeterminism
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb
